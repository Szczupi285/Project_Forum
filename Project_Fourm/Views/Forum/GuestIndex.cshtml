@model PostCompositeModel

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_SidebarLayoutIndexLoggedOut";
    <div class="display-post">
        <div class="filters">
            @using (Html.BeginForm("Index", "Forum", FormMethod.Post))
            {
                <div class="choose-hour-filter">
                    <label class="radio-button-label">
                        @Html.RadioButtonFor(model => model.FilterPostsModel.SelectedTimeFilter, TimeFilter.sixHours,
                new {@class = "radio-button-style"})
                        <span class="label-text">6h</span>
                    </label>
                    <label class="radio-button-label">
                        @Html.RadioButtonFor(model => model.FilterPostsModel.SelectedTimeFilter, TimeFilter.twelveHours,
                new {@class = "radio-button-style"})
                        <span class="label-text">12h</span>
                    </label>
                    <label class="radio-button-label">
                        @Html.RadioButtonFor(model => model.FilterPostsModel.SelectedTimeFilter, TimeFilter.day,
                new {@class = "radio-button-style"})
                        <span class="label-text">day</span>
                    </label>
                    <label class="radio-button-label">
                        @Html.RadioButtonFor(model => model.FilterPostsModel.SelectedTimeFilter, TimeFilter.week,
                new {@class = "radio-button-style"})
                        <span class="label-text">week</span>
                    </label>
                    <label class="radio-button-label">
                        @Html.RadioButtonFor(model => model.FilterPostsModel.SelectedTimeFilter, TimeFilter.month,
                new {@class = "radio-button-style"})
                        <span class="label-text">month</span>
                    </label>
                </div>

            }
            @using (Html.BeginForm("Tag", "Forum", FormMethod.Get))
            {
                <div class="search-container">
                    <input type="text" id="search-input" name="tag" maxlength="50" placeholder="Choose tag...">
                    <button class="search-button" value="search">
                        <i class="material-icons">search</i>
                    </button>
                </div>
            }
        </div>

        <div class="display-post-container">
            @foreach (var postDisplay in Model.PostDisplayContents)
            {
                <div class="single-post-display">
                    <p class="post-username">@postDisplay.Item1.Username</p>
                    <p class="post-content">@postDisplay.Item1.Content</p>
                    <p class="post-creation-date">@postDisplay.Item1.CreationDate</p>
                    <i id="post-upvote-favorite" class="material-icons">favorite</i>
                    <span class="post-upvote-count">@postDisplay.Item1.UpvotesCount</span>
                </div>
                @foreach (var respondDisplay in postDisplay.Item2)
                {

                    <div class="single-respond-display">
                        <p class="respond-username">@respondDisplay.Username</p>
                        <p class="respond-content">@respondDisplay.Content</p>
                        <p class="respond-creation-date">@respondDisplay.CreationDate</p>
                        <i id="respond-upvote-favorite" class="material-icons">favorite</i>
                        <span class="respond-upvote-count">@respondDisplay.UpvotesCount</span>
                    </div>
                }
            }
        </div>


    </div>
}
@section scripts {
    <script src="~/js/RefreshOnChangeDate.js"></script>
}